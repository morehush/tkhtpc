#sabnzbd, sonarr, radarr, plex, qbittorrent
version: "3.3"

networks:
  ngproxy:
    external: true

volumes:
  cache:

services:
  nginxpm:
    image: jc21/nginx-proxy-manager
    container_name: nginxpm
    environment:
      DB_MYSQL_HOST: "mariadb"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'true'
    volumes:
      - ./nginxpm/data:/data
      - ./nginxpm/letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
      - 81:81
    depends_on:
      - mariadb
    restart: $RESTART
    networks:
      - ngproxy

  mariadb:
    image: jc21/mariadb-aria
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./nginxpm/db:/var/lib/mysql
    restart: $RESTART
    networks:
      - ngproxy
  
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - TZ=$TZ
      - WATCHTOWER_SCHEDULE=0 0 5 * * *
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=telegram://$BOT_TOKEN@telegram/?channels=$CHAT_ID
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # command: --interval 30
    restart: always

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    # ports:
    #   - 3000:3000
    volumes:
      - ./homepage:/app/config
      - $BIGVOL:/sgt5tb
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    restart: $RESTART
    networks:
      - ngproxy

  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=22
      - NVIDIA_VISIBLE_DEVICES=all
      - JELLYFIN_PublishedServerUrl=jf.$DOMAIN #optional
    # network_mode: host
    # ports:
    #   - 8096:8096
    #   - 8920:8920 #optional
    #   - 7359:7359/udp #optional
    #   - 1900:1900/udp #optional
    volumes:
      - ./jellyfin:/config
      - ./jellyfin/cache:/cache
      - cache:/transcode
      - $HOMEDIR:/homedir
      - $BIGVOL:/bigvol
    devices:
      - /dev/dri:/dev/dri #optional
    restart: $RESTART
    networks:
      - ngproxy

  plex:
    image: plexinc/pms-docker
    container_name: plex
    network_mode: host
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - UMASK=22
      - PLEX_CLAIM=$PLEXCLAIM
      - ADVERTISE_IP=$PLEXIP
    hostname: $HOSTNAME
    #    ports:
    #      - 32400:32400/tcp
    #      - 3005:3005/tcp
    #      - 8324:8324/tcp
    #      - 32469:32469/tcp
    #      - 1900:1900/udp
    #      - 32410:32410/udp
    #      - 32412:32412/udp
    #      - 32413:32413/udp
    #      - 32414:32414/udp
    volumes:
      - ./plex/database:/config
      - cache:/transcode
      - $BIGVOL:/bigvol
    restart: $RESTART

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    # ports:
    #   - 9696:9696
    volumes:
      - ./prowlarr:/config
      - ./downloads:/downloads
    restart: $RESTART
    networks:
      - ngproxy

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    # ports:
    #   - 8181:8080 # port mapping
    volumes:
      - ./sabnzbd/config:/config # sab config directory
      - ./downloads:/downloads # completed directory for downloads. this contains the category directories
      - ./downloads/incomplete:/incomplete-downloads # temp directory for downloads
      - $BIGVOL/others:/others
    restart: $RESTART
    networks:
      - ngproxy

  sonarr:
    image: lscr.io/linuxserver/sonarr:develop
    container_name: sonarr
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - UMASK=22
    # ports:
    #   - 8989:8989 # port mapping
    volumes:
      - ./sonarr:/config # sonarr config dir
      - ./downloads:/downloads # your completed downloads directory from sab
      - $BIGVOL/tv:/tv # where it will copy your files when done. add as many of these as you need
      - $BIGVOL/forkidstv:/forkidstv
    restart: $RESTART
    networks:
      - ngproxy

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - UMASK=22
    # ports:
    #   - 7878:7878 # port mapping
    volumes:
      - ./radarr:/config # config directory for radarr
      - ./downloads:/downloads # completed downloads directory from sab
      - $BIGVOL/movies:/movies # where radarr will copy your movies. add as many of these as you need
      - $BIGVOL/malindamovies:/malindamovies
      - $BIGVOL/forkids:/forkids
      - $BIGVOL/others:/others
    restart: $RESTART
    networks:
      - ngproxy

  syncthing:
    image: lscr.io/linuxserver/syncthing
    container_name: syncthing
    hostname: $HOSTNAME
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    volumes:
      - ./syncthing:/config
      - $BIGVOL/others:/others
      - $HOMEDIR:/homedir
    # ports:
    #   - 8384:8384
    #   - 22000:22000
    #   - 21027:21027
    restart: $RESTART
    network_mode: host

  # addarr:
  #   image: waterboy1602/addarr
  #   container_name: addarr
  #   network_mode: host
  #   volumes:
  #     - ./addarr/config.yaml:/app/config.yaml:ro
  #     - ./addarr/chatid.txt:/app/chatid.txt:rw
  #     - ./addarr/admin.txt:/app/admin.txt:ro
  #     - ./addarr/allowlist.txt:/app/allowlist.txt:ro
  #     - ./addarr/logs:/app/logs:rw
  #   restart: $RESTART

  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    ports:
      - 3000:3000
      - 3001:3001
    restart: $RESTART
    networks:
      - ngproxy

  ariang:
    image: hurlenko/aria2-ariang
    container_name: ariang
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - RPC_SECRET=m4xwhisp3rthal3r
      - ARIA2RPCPORT=443
    volumes:
      - ./ariang:/aria2/conf
      - $HOMEDIR:/homedir
    # ports:
    #   - 443:8080
    restart: $RESTART
    networks:
      - ngproxy
    
  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=$TZ
    volumes:
      - ./jellyseerr:/app/config
      - $HOMEDIR:/homedir
      - $BIGVOL:/bigvol
    # ports:
    #   - 5055:5055
    restart: $RESTART
    networks:
      - ngproxy

